//
// Academic License - for use in teaching, academic research, and meeting
// course requirements at degree granting institutions only.  Not for
// government, commercial, or other organizational use.
// File: gravity.cpp
//
// MATLAB Coder version            : 4.0
// C/C++ source code generated on  : 20-Nov-2018 22:55:49
//

// Include Files
#include "rt_nonfinite.h"
#include "gravity.h"

// Function Definitions

//
// function G = gravity(COM_X,COM_Y,COM_Z,Mb,beta,g,q1,q2,q3,q4)
// GRAVITY
//     G = GRAVITY(COM_X,COM_Y,COM_Z,MB,BETA,G,Q1,Q2,Q3,Q4)
// Arguments    : float COM_X
//                float COM_Y
//                float COM_Z
//                float Mb
//                double beta
//                float g
//                float q1
//                float q2
//                float q3
//                float q4
//                float G[6]
// Return Type  : void
//
__attribute__((optimize("O3"))) void gravity(float COM_X, float COM_Y, float COM_Z, float Mb, double beta, float
             g, float q1, float q2, float q3, float q4, float G[6])
{
  float t4;
  float t7;
  float t11;
  float t14;

  //     This function was generated by the Symbolic Math Toolbox version 8.1.
  //     12-Nov-2018 22:44:45
  // 'gravity:8' t2 = COM_X.*q1;
  // 'gravity:9' t3 = COM_Z.*q3;
  // 'gravity:10' t15 = COM_Y.*q4;
  // 'gravity:11' t4 = t2+t3-t15;
  t4 = (COM_X * q1 + COM_Z * q3) - COM_Y * q4;

  // 'gravity:12' t5 = COM_Y.*q2;
  // 'gravity:13' t6 = COM_Z.*q1;
  // 'gravity:14' t17 = COM_X.*q3;
  // 'gravity:15' t7 = t5+t6-t17;
  t7 = (COM_Y * q2 + COM_Z * q1) - COM_X * q3;

  // 'gravity:16' t8 = COM_X.*q2;
  // 'gravity:17' t9 = COM_Y.*q3;
  // 'gravity:18' t10 = COM_Z.*q4;
  // 'gravity:19' t11 = t8+t9+t10;
  t11 = (COM_X * q2 + COM_Y * q3) + COM_Z * q4;

  // 'gravity:20' t12 = COM_Y.*q1;
  // 'gravity:21' t13 = COM_X.*q4;
  // 'gravity:22' t16 = COM_Z.*q2;
  // 'gravity:23' t14 = t12+t13-t16;
  t14 = (COM_Y * q1 + COM_X * q4) - COM_Z * q2;

  // 'gravity:24' G = [0.0;0.0;Mb.*g.*q4.*t4.*-2.0-Mb.*g.*q2.*t7.*2.0-Mb.*g.*q3.*t11.*2.0+Mb.*g.*q1.*t14.*2.0;Mb.*g.*q1.*t4.*-2.0-Mb.*g.*q3.*t7.*2.0+Mb.*g.*q2.*t11.*2.0-Mb.*g.*q4.*t14.*2.0;Mb.*g.*q2.*t4.*2.0-Mb.*g.*q4.*t7.*2.0+Mb.*g.*q1.*t11.*2.0+Mb.*g.*q3.*t14.*2.0;beta.*q1.^2.*(1.0./2.0)+beta.*q2.^2.*(1.0./2.0)+beta.*q3.^2.*(1.0./2.0)+beta.*q4.^2.*(1.0./2.0)]; 
  G[0] = 0.0F;
  G[1] = 0.0F;
  G[2] = ((Mb * g * q4 * t4 * -2.0F - Mb * g * q2 * t7 * 2.0F) - Mb * g * q3 *
          t11 * 2.0F) + Mb * g * q1 * t14 * 2.0F;
  G[3] = ((Mb * g * q1 * t4 * -2.0F - Mb * g * q3 * t7 * 2.0F) + Mb * g * q2 *
          t11 * 2.0F) - Mb * g * q4 * t14 * 2.0F;
  G[4] = ((Mb * g * q2 * t4 * 2.0F - Mb * g * q4 * t7 * 2.0F) + Mb * g * q1 *
          t11 * 2.0F) + Mb * g * q3 * t14 * 2.0F;
  G[5] = (((float)beta * (q1 * q1) * 0.5F + (float)beta * (q2 * q2) * 0.5F) +
          (float)beta * (q3 * q3) * 0.5F) + (float)beta * (q4 * q4) * 0.5F;
}

//
// File trailer for gravity.cpp
//
// [EOF]
//
